# libtcod makefile
# this linux makefile uses libpng/zlib installed on the system
# instead of libraries from the dependencies directory
# might be useful if you're using a libc version not compatible
# to build debug version, run make FLAGS=-g
# to build release version, run make FLAGS='-O2 -s'
# on some linux distro, you might need to use make FLAGS='-g -fPIC'
BINDIR=../../bin/linux
SRCDIR=src
INCDIR=include

#dependencies
# SDL
SDL_LIBS=-lSDL

# ZLIB
ZLIB_LIBS=-lz

# PNG
PNG_LIBS=-lpng


CFLAGS=$(FLAGS) -I$(INCDIR) -I$(INCDIR)/gui -Wall -fno-strict-aliasing
TEMP=/tmp
CC=gcc
CPP=g++
.SUFFIXES: a .o .h .c

$(TEMP)/libtcod/%.o : $(SRCDIR)/%.c
	$(CC) $(CFLAGS) -o $@ -c $<
$(TEMP)/libtcod/%.o : $(SRCDIR)/%.cpp
	$(CPP) $(CFLAGS) -o $@ -c $< 
$(TEMP)/libtcod/gui/%.o : $(SRCDIR)/gui/%.cpp
	$(CPP) $(CFLAGS) -o $@ -c $< 

LIBOBJS_C= \
	$(TEMP)/libtcod/bresenham_c.o \
	$(TEMP)/libtcod/bsp_c.o \
	$(TEMP)/libtcod/color_c.o \
	$(TEMP)/libtcod/console_c.o \
	$(TEMP)/libtcod/fov_c.o \
	$(TEMP)/libtcod/fov_circular_raycasting.o \
	$(TEMP)/libtcod/fov_diamond_raycasting.o \
	$(TEMP)/libtcod/fov_recursive_shadowcasting.o \
	$(TEMP)/libtcod/fov_digital.o \
	$(TEMP)/libtcod/fov_permissive2.o \
	$(TEMP)/libtcod/fov_restrictive.o \
	$(TEMP)/libtcod/heightmap_c.o \
	$(TEMP)/libtcod/image_c.o \
	$(TEMP)/libtcod/lex_c.o \
	$(TEMP)/libtcod/list_c.o \
	$(TEMP)/libtcod/mersenne_c.o \
	$(TEMP)/libtcod/noise_c.o \
	$(TEMP)/libtcod/parser_c.o \
	$(TEMP)/libtcod/path_c.o \
	$(TEMP)/libtcod/sys_c.o \
	$(TEMP)/libtcod/sys_sdl_c.o \
	$(TEMP)/libtcod/sys_sdl_img_bmp.o \
	$(TEMP)/libtcod/sys_sdl_img_png.o \
	$(TEMP)/libtcod/tree_c.o \
	$(TEMP)/libtcod/wrappers.o \
	$(TEMP)/libtcod/zip_c.o

LIBOBJS_CPP= \
	$(TEMP)/libtcod/bresenham.o \
	$(TEMP)/libtcod/bsp.o \
	$(TEMP)/libtcod/color.o \
	$(TEMP)/libtcod/console.o \
	$(TEMP)/libtcod/fov.o \
	$(TEMP)/libtcod/heightmap.o \
	$(TEMP)/libtcod/image.o \
	$(TEMP)/libtcod/lex.o \
	$(TEMP)/libtcod/mersenne.o \
	$(TEMP)/libtcod/mouse.o \
	$(TEMP)/libtcod/noise.o \
	$(TEMP)/libtcod/parser.o \
	$(TEMP)/libtcod/path.o \
	$(TEMP)/libtcod/sys.o \
	$(TEMP)/libtcod/zip.o

GUIOBJS= \
	$(TEMP)/libtcod/gui/button.o \
	$(TEMP)/libtcod/gui/container.o \
	$(TEMP)/libtcod/gui/flatlist.o \
	$(TEMP)/libtcod/gui/hbox.o \
	$(TEMP)/libtcod/gui/image.o \
	$(TEMP)/libtcod/gui/label.o \
	$(TEMP)/libtcod/gui/radiobutton.o \
	$(TEMP)/libtcod/gui/slider.o \
	$(TEMP)/libtcod/gui/statusbar.o \
	$(TEMP)/libtcod/gui/textbox.o \
	$(TEMP)/libtcod/gui/togglebutton.o \
	$(TEMP)/libtcod/gui/toolbar.o \
	$(TEMP)/libtcod/gui/vbox.o \
	$(TEMP)/libtcod/gui/widget.o

all : libtcod.so libtcod++.so libtcod-gui.so

$(TEMP)/libtcod :
	mkdir -p $@

$(TEMP)/libtcod/gui :
	mkdir -p $@

libtcod.a : $(LIBOBJS_C)
	ar r $@ $(LIBOBJS_C)

libtcod++.a : $(LIBOBJS_CPP)
	ar r $@ $(LIBOBJS_CPP)

libtcod.so : $(TEMP)/libtcod $(LIBOBJS_C)
	gcc -shared -Wl,-soname,$@ -o $@ $(LIBOBJS_C) $(ZLIB_LIBS) $(PNG_LIBS) $(SDL_LIBS) $(CFLAGS)

libtcod++.so : $(TEMP)/libtcod $(LIBOBJS_CPP)
	gcc -shared -Wl,-soname,$@ -o $@ $(LIBOBJS_CPP) -L. -ltcod $(CFLAGS)

libtcod-gui.so : $(TEMP)/libtcod $(TEMP)/libtcod/gui $(GUIOBJS)
	gcc -shared -Wl,-soname,$@ -o $@ $(GUIOBJS) -L. -ltcod -ltcod++ $(CFLAGS)

clean : 
	\rm -f $(LIBOBJS_C) $(LIBOBJS_CPP) $(GUIOBJS) libtcod.a libtcod++.a libtcod.so libtcod++.so libtcod-gui.so libtcodpy.pyc

